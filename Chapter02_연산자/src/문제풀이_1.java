<<<<<<< HEAD
/*
 *   1. 변수 설정 / 상수 설정
 *      데이터형 변수명;
 *      final 데이터형 변수명=값 
 *      -----
 *      변수 => 변경할 수 있다 (소문자) 
 *      상수 => 고정 (모든 문자가 대문자)
 *      변수/상수의 사용범위
 *      public class A
 *      {
 *         변수 / 상수 
 *         public static void main(String[] arg)
 *         {
 *            변수 / 상수 
 *            int a=10;
 *            
 *            {
 *               int b=20;
 *                
 *               {
 *                  int c=30;
 *               }
 *               
 *            }
 *         } //
 *      } //
 *   2. 변수 / 상수 초기화 
 *      데이터형 변수=값 
 *      ---------- 값보다 크거나 같다 
 *      값이 큰경우에는 데이터형에 맞게 변환 => 형변환
 *      byte < char < int < long < float < double 
 *      int a = 10.5 ==> 오류 
 *      -----   -----
 *        int   double  ==> int a=(int)10.5  ==> 강제형변환 
 *      double d=10; => 자동 형변환 
 *      -------- --
 *        double int   ==> 10은 10.0으로 변경해서 저장 
 *   3. 변수명 만들기 
 *      1) 알파벳,한글로 시작한다 
 *         int abc; => int Abc; (대소문자 구분)
 *         int 국어점수;
 *      2) 숫자사용이 가능 
 *         int a1a,aaaaa1,baba12baba2ab... (숫자는 앞에 사용금지)
 *      3) 특수문자 ( _ , $ ) => 위치는 상관없다 
 *         int _temp  int file_size... $는 거의 사용빈도가 없다 
 *      4) 키워드 : 이미 사용중이 자바 단어 
 *                int , long...
 *      5) 공백 사용 금지 
 *      6) 변수의 길이는 제한이 없다 (3~10)
 *   4. 데이터형 
 *      기본형 : 자바에서 지원하는 메모리 크기 
 *      -------------------------------
 *        정수형 
 *          byte  (1byte) => -128~127 => 네트워크 / 파일입출력 
 *            byte b=128 => 오류발생 => 오버플로워 (저장 범위 초과)
 *          int   (4byte) => -21억 4천 ~ 21억 4천 
 *                        => 모든 컴퓨터는 정수가 있는 경우에 default
 *                        => 정수중에 가장 많이 사용되는 데이터형 
 *          long  (8byte) => 빅데이터 , AI , 대용량 데이터 
 *      -------------------------------
 *        실수형
 *          double : 8byte => 소수점까지 저장이 가능 
 *                   모든 실수는 double을 인식한다 
 *      -------------------------------
 *        문자형 : char => (0~65535) => 2byte(멀티바이트=>유니코드)
 *               각국의 언어 사용이 가능
 *               => ''를 사용한다 (단 1글자입력을 해야 한다)
 *                  공백 => ' '
 *               => 연산처리가 되면 정수형으로 변경 
 *      -------------------------------
 *        논리형 : boolean (1byte) => true/false만 저장이 가능 
 *      -------------------------------
 *   5. 형변환 : 필요한 경우에는 형을 변경 할 수 있다 
 *      자동형변환 
 *        왼쪽의 데이터형 > 값 
 *        int a = 'A'
 *         a > 'A' ==> a=65
 *        double d = 10;
 *        d > 10  ==> a=10.0
 *      강제형변환 
 *        왼쪽의 데이터형 < 값
 *        int a = 10.5
 *        a < 10.5 ==> 오류 발생 
 *        int a=(int)10.5
 *              -----
 *      크기 
 *            -----------------> 자동 형변환
 *       byte < char < int < long < float < double
 *            <----------------- 강제 형변환
 */
public class 문제풀이_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        int a=10;
        int 문제풀이_1=10;
        
        {
        	int b=20;
        	
        	{
        		int c=30;
        	} // a,b,c
        	//System.out.println("c="+c);
        }// a,b
        
        byte b=(byte)300;
        System.out.println(b);//초과사에 뒤에서부터 8bit를 잘라온다 
        /*
         *      300 
         *        256  0  0  32 0 8 0 0 0
         *        1    0  0  1  0 1 0 0 0
         *             -------------------
         *                   32+8 => 44
         *        98
         *        256  128  64  32 16  8  4  2  0(1)
         *                   1   1           1
         *                   1  1   0   0 0  1 0
         */
	}// a => 블록변수 => 지역변수 => {}이 종료되면 자동으로 사라진다(메모리 해제)
	// 지역변수는 반드시 초기화 

=======
/*
 *   1. 변수 설정 / 상수 설정
 *      데이터형 변수명;
 *      final 데이터형 변수명=값 
 *      -----
 *      변수 => 변경할 수 있다 (소문자) 
 *      상수 => 고정 (모든 문자가 대문자)
 *      변수/상수의 사용범위
 *      public class A
 *      {
 *         변수 / 상수 
 *         public static void main(String[] arg)
 *         {
 *            변수 / 상수 
 *            int a=10;
 *            
 *            {
 *               int b=20;
 *                
 *               {
 *                  int c=30;
 *               }
 *               
 *            }
 *         } //
 *      } //
 *   2. 변수 / 상수 초기화 
 *      데이터형 변수=값 
 *      ---------- 값보다 크거나 같다 
 *      값이 큰경우에는 데이터형에 맞게 변환 => 형변환
 *      byte < char < int < long < float < double 
 *      int a = 10.5 ==> 오류 
 *      -----   -----
 *        int   double  ==> int a=(int)10.5  ==> 강제형변환 
 *      double d=10; => 자동 형변환 
 *      -------- --
 *        double int   ==> 10은 10.0으로 변경해서 저장 
 *   3. 변수명 만들기 
 *      1) 알파벳,한글로 시작한다 
 *         int abc; => int Abc; (대소문자 구분)
 *         int 국어점수;
 *      2) 숫자사용이 가능 
 *         int a1a,aaaaa1,baba12baba2ab... (숫자는 앞에 사용금지)
 *      3) 특수문자 ( _ , $ ) => 위치는 상관없다 
 *         int _temp  int file_size... $는 거의 사용빈도가 없다 
 *      4) 키워드 : 이미 사용중이 자바 단어 
 *                int , long...
 *      5) 공백 사용 금지 
 *      6) 변수의 길이는 제한이 없다 (3~10)
 *   4. 데이터형 
 *      기본형 : 자바에서 지원하는 메모리 크기 
 *      -------------------------------
 *        정수형 
 *          byte  (1byte) => -128~127 => 네트워크 / 파일입출력 
 *            byte b=128 => 오류발생 => 오버플로워 (저장 범위 초과)
 *          int   (4byte) => -21억 4천 ~ 21억 4천 
 *                        => 모든 컴퓨터는 정수가 있는 경우에 default
 *                        => 정수중에 가장 많이 사용되는 데이터형 
 *          long  (8byte) => 빅데이터 , AI , 대용량 데이터 
 *      -------------------------------
 *        실수형
 *          double : 8byte => 소수점까지 저장이 가능 
 *                   모든 실수는 double을 인식한다 
 *      -------------------------------
 *        문자형 : char => (0~65535) => 2byte(멀티바이트=>유니코드)
 *               각국의 언어 사용이 가능
 *               => ''를 사용한다 (단 1글자입력을 해야 한다)
 *                  공백 => ' '
 *               => 연산처리가 되면 정수형으로 변경 
 *      -------------------------------
 *        논리형 : boolean (1byte) => true/false만 저장이 가능 
 *      -------------------------------
 *   5. 형변환 : 필요한 경우에는 형을 변경 할 수 있다 
 *      자동형변환 
 *        왼쪽의 데이터형 > 값 
 *        int a = 'A'
 *         a > 'A' ==> a=65
 *        double d = 10;
 *        d > 10  ==> a=10.0
 *      강제형변환 
 *        왼쪽의 데이터형 < 값
 *        int a = 10.5
 *        a < 10.5 ==> 오류 발생 
 *        int a=(int)10.5
 *              -----
 *      크기 
 *            -----------------> 자동 형변환
 *       byte < char < int < long < float < double
 *            <----------------- 강제 형변환
 */
public class 문제풀이_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        int a=10;
        int 문제풀이_1=10;
        
        {
        	int b=20;
        	
        	{
        		int c=30;
        	} // a,b,c
        	//System.out.println("c="+c);
        }// a,b
        
        byte b=(byte)300;
        System.out.println(b);//초과사에 뒤에서부터 8bit를 잘라온다 
        /*
         *      300 
         *        256  0  0  32 0 8 0 0 0
         *        1    0  0  1  0 1 0 0 0
         *             -------------------
         *                   32+8 => 44
         *        98
         *        256  128  64  32 16  8  4  2  0(1)
         *                   1   1           1
         *                   1  1   0   0 0  1 0
         */
	}// a => 블록변수 => 지역변수 => {}이 종료되면 자동으로 사라진다(메모리 해제)
	// 지역변수는 반드시 초기화 

>>>>>>> 04934d19558c0e09418ecde1327b3ca6bf76c2c1
}