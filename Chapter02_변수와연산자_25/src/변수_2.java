/*
 * 1. 변수 선언 ==> 25page
 *    1) 변수 : 한개의 데이터를 저장하는 메모리 공간 이름 
 *                               --------- 주소 => 저장한 데이터를 읽기/쓰기
 *            => 데이터 변경이 가능
 *    2) 상수 : 한개의 데이터를 저장하는 메모리 공간 이름
 *             => 데이터 변경이 불가능
 *             => 변수와 상수의 구분은 final 
 *                ---  ---
 *                      | final 데이터형 상수명=값  => 값을 고정 (변경(x)) 
 *                데이터형 변수명 = 값 => 값변경이 가능
 *    3) 리터럴 : 실제 저장된 값(메모리)
 * 2. 변수 명칭법 => 식별자 => 같은 곳에서 같은 이름의 변수는 사용이 불가능하다 =>26page
 *     => 알파벳 , 한글로 시작 
 *        (대소문자 구분)
 *        int 국어, 영어, 수학
 *        int kor, eng, math, Kor
 *     => 숫자사용 (뒤에 사용이 가능)  
 *        int kor1,kor2,kor3...
 *     => 키워드는 사용할 수 없다
 *        int , byte, long, boolean, char....
 *     => 공백이 있으면 안된다
 *        int a b
 *     => 특수문자 사용이 가능
 *        _ , $  ==> _ (위치는 상관없다)      
 *        _가 앞에 있는 경우는 임시변수 => _temp => 정렬
 *     => 클래스,병수,상수,메소드 , 인터페이스 , 추상클래스 , 배열 ....;   
 * 3. 데이터형(타입),기본형 ==> 27page
 *    형식)
 *      데이터타입 변수명;
 *      ------- 정수,실수,문자,논리
 *      --------------------------------------------
 *       정수형 
 *         byte => 1byte (사용하는 범위 : -128~127)
 *                 사용처 : 파일읽기 , 업로드 , 다운로드 , 네트워크 통신 
 *         int => 가장 많이 사용하는 정수형 (디폴트)
 *                사용처 : 모든 프로그램의 정수형이 필요한 경우
 *                => 4byte(사용범위 : -21억4천 ~ 21억 4천)
 *         long => 데이터 수집 => 라이브러리 제작 
 *                 금융권 / 증권 
 *                 8byte ==> 2^63
 *         bit = byte
 *          => 0이나 1만 저장하는 공간 8bit => 1byte
 *          -------------------------- 음수/양수
 *            |음/양|  |  |  |  |  |  |
 *             1(음)
 *             0(양)
 *          --------------------------        
 *          11111111
 *          01111111
 *      --------------------------------------------
 *       논리형 : boolean => true/false
 *              조건이 있는 경우에 주로 사용
 *              => 로그인 , 검색어 .... , 페이지 
 *              boolean => 변수 설정
 *                         bLogin
 *                         bCheck...
 *              1byte (0=false,1=true)
 *              사용법
 *              boolean bCheck=false           
 *      --------------------------------------------
 *       문자형 : char => 2byte (0~65535)
 *              문자는 양수로만 되어 있다
 *              => 표현하는 문자가 많이 있다 
 *              => Unicode : 각국의 언어를 사용할 수 있다
 *              => char 문자 한개만 저장이 가능 => ''
 *                 여러개 저장 => "" => char(X) , char배열 => String
 *              => char는 저장시에 해당 번호로 변경해서 저장
 *                 'A' ==> 65
 *                 'a' ==> 97
 *                 '0' ==> 48 ASC코드
 *              => 사용법 ==> 31page
 *                 char fname='홍';
 *                 char alpha='A';
 *                 "A+" "A-"
 *              => char는 연산시에 정수형으로 변경된다
 *                 'A'+1 => 66
 *                 ---
 *                  65
 *                  
 *                 "A"+1  ==> "A1"
 *                 
 *                 7+"7"+7+7
 *                 ==> "7777" ==> 문자열 결합
 *                 7+7+"7"+7
 *                 ==> "1477"
 *         *** 정수 표현법
 *             10 , 20 ===> 10진법
 *             010  ==> 
 *             -- 8진법
 *             0x11
 *             -- 16진법
 *             0b1000
 *             -- 2진법
 *             
 *                1010    
 *      --------------------------------------------
 *       실수형 : 소수점
 *              float => 4byte => 소수점 6자리
 *              double => 8byte => 소수점 15자리
 *              double => 실수형의 default => 10.5
 *               => 10.5F(f)
 *      --------------------------------------------
 *       참조형 : 데이터를 여러개 한번에 저장하는 방법 
 *              배열/클래스
 *      --------------------------------------------
 *      
 *      == 01111111
 *      1) Change
 *         0->1
 *         1->0
 *         10000000 => 1의 보수 
 *        +       1
 *        ----------
 *        100000001 => 2의 보수
 * 4. 각 데이터형별 사용법
 * 5. 연산처리 => 제어 
 */
public class 변수_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 모든 숫자 => int
        System.out.println('A'+'B'); //char는 연산시에 무조건 정수형으로 처리
        System.out.println("A"+"B"); // AB
        System.out.println((int)'A');
        System.out.println((int)'a');
        System.out.println((int)'0');
        System.out.println((int)'+');
        System.out.println('A'+'+');
        System.out.println(0b1010);
        System.out.println(01010);
        System.out.println(8*8*8+8);
        System.out.println(0x1010);
        // 16^3 + 16^1
        System.out.println(16*16*16+16);
        
        float f=10.5F;
        double d=10.5;
	}

}
